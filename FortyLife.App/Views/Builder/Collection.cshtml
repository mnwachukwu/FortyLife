@using FortyLife.Core
@using FortyLife.DataAccess
@using HeyRed.MarkdownSharp
@model FortyLife.App.Models.ViewCollectionModel

@{
    ViewBag.Title = Model.Collection.Name;

    var isOwner = ViewBag.IsOwner;
    var markdownInterpreter = new Markdown();
    var markdownHelper = new MarkdownHelper();
    var description = "Description";
    var parsedMarkdown = markdownHelper.Transform(Model.Collection.Description); // replace tildes first
    parsedMarkdown = markdownInterpreter.Transform(parsedMarkdown); // parse the rest of the markdown
    parsedMarkdown = markdownHelper.RemoveProhibitedTags(parsedMarkdown); // remove <script> and <style> tags (and everything inside of them)
    var totalCards = 0;
    var totalPrice = 0.0;

    for (var i = 0; i < Model.Collection.Cards.Count; i++)
    {
        var card = Model.Collection.Cards[i];
        var price = Model.Prices[i] * card.Count;
        totalCards += card.Count;
        totalPrice += price;
    }

    // I feel like "Ehhhh..." about this feature
    //if (Model.Description.StartsWith("#"))
    //{
    //    description = Model.Description.Split(new[] {Environment.NewLine}, StringSplitOptions.None)[0].Remove(0, 1).Trim();
    //    // TODO: if we do decide to keep this feature, remove the first line from the render string so it isn't redundant
    //}
}

@section Scripts{
    @Scripts.Render("~/bundles/tooltipjs")
}

<div class="row">
    <div class="col-md-11">
        <h2>@ViewBag.Title</h2>
        <span class="badge badge-pill badge-secondary">Collection</span> &nbsp; <a href="/Account/ViewProfile?id=@Model.OwnerId">@Model.OwnerDisplayName</a>
    </div>
    <div class="col-md-1">
        @if (isOwner) // TODO: need to make sure only the collection owner can see this
        {
            <a href="/Builder/EditCollection?id=@Model.Collection.CollectionId" class="float-right btn btn-outline-warning">Edit</a>
        }
    </div>
</div>

<hr />

<span class="small">Last edited on @Model.Collection.LastEditDate.ToString("D").</span> <br /> <br />

<div class="card border-success">
    <div class="card-header">
        Card List
    </div>
    <div class="card-body">
        <span class="small">Total Cards: <span class="text-info">@totalCards</span></span> <span class="small float-right">Total TCG Mid Price: <span class="text-success">@totalPrice.ToString("C")</span></span>
        @Html.Partial("_CollectionCardList", Model)
    </div>
</div>

<br />

@if (!string.IsNullOrEmpty(parsedMarkdown))
{
    <div class="card border-dark">
        <div class="card-header">
            @description
        </div>
        <div class="card-body">
            @Html.Raw(parsedMarkdown)
        </div>
    </div>
}