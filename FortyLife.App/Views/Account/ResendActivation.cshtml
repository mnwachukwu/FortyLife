@using FortyLife.Core
@model FortyLife.App.Models.ResendActivationViewModel

@{
    ViewBag.Title = "Resend Activation";
}

<h2>@ViewBag.Title</h2>
<h4>Use this form to request a new activation key, or <a href="/Account/Activate">use this form to activate your account.</a></h4>
<hr />

@using (Html.BeginForm("ResendActivation", "Account", FormMethod.Post, new { id = "resend-form", @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-outline-success g-recaptcha">
                Resend Activation
            </button>
        </div>
    </div>

    <input type="hidden" id="g-recaptcha-data" name="g-recaptcha-data" />
}

@section Scripts {
    <script src="https://www.google.com/recaptcha/api.js?render=@Secrets.GetRecaptchaClientKey()"></script>
    <script>
        grecaptcha.ready(function () {
            grecaptcha.execute('@Secrets.GetRecaptchaClientKey()', { action: 'ResendActivationEmail' }).then(function (token) {
                document.getElementById("g-recaptcha-data").value = token;
            });
        });
    </script>
}